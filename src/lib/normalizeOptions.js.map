{"version":3,"sources":["../../../../../packages/typescript/src/lib/normalizeOptions.ts"],"sourcesContent":["import ts from 'typescript';\nimport { Compiler } from 'webpack';\nimport get from 'lodash.get';\nimport path from 'path';\n\nimport type { FederatedTypesPluginOptions, TypeServeOptions } from '../types';\n\nimport {\n  TYPESCRIPT_COMPILED_FOLDER_NAME,\n  TYPESCRIPT_FOLDER_NAME,\n  TYPES_INDEX_JSON_FILE_NAME,\n} from '../constants';\n\nexport type NormalizeOptions = ReturnType<typeof normalizeOptions>;\n\nexport const DEFAULT_FETCH_TIMEOUT = 3000;\nexport const DEFAULT_FETCH_MAX_RETRY_ATTEMPTS = 3;\nexport const DEFAULT_FETCH_RETRY_DELAY = 1000;\n\nconst defaultOptions: Required<\n  Omit<FederatedTypesPluginOptions, 'federationConfig' | 'typeServeOptions'>\n> = {\n  compiler: 'tsc',\n  disableDownloadingRemoteTypes: false,\n  disableTypeCompilation: false,\n  typescriptFolderName: TYPESCRIPT_FOLDER_NAME,\n  typescriptCompiledFolderName: TYPESCRIPT_COMPILED_FOLDER_NAME,\n  additionalFilesToCompile: [],\n  typeFetchOptions: {\n    downloadRemoteTypesTimeout: DEFAULT_FETCH_TIMEOUT,\n    maxRetryAttempts: DEFAULT_FETCH_MAX_RETRY_ATTEMPTS,\n    retryDelay: DEFAULT_FETCH_RETRY_DELAY,\n    shouldRetryOnTypesNotFound: true,\n    shouldRetry: true,\n  },\n};\n\nexport const validateTypeServeOptions = (options: TypeServeOptions) => {\n  if (!options) {\n    throw new Error('TypeServeOptions is required');\n  }\n\n  if (!options.host) {\n    throw new Error('TypeServeOptions.host is required');\n  }\n\n  if (!options.port || !Number.isInteger(options.port)) {\n    throw new Error('TypeServeOptions.port is required');\n  }\n};\n\nexport const isObjectEmpty = <T extends object>(obj: T) => {\n  for (const x in obj) {\n    return false;\n  }\n  return true;\n};\n\nexport const normalizeOptions = (\n  options: FederatedTypesPluginOptions,\n  compiler: Compiler,\n) => {\n  const webpackCompilerOptions = compiler.options;\n\n  const { context, watchOptions } = webpackCompilerOptions;\n  const {\n    federationConfig,\n    typescriptFolderName,\n    typescriptCompiledFolderName,\n    ...restOptions\n  } = {\n    ...defaultOptions,\n    ...options,\n  };\n\n  const typeFetchOptions = {\n    ...defaultOptions.typeFetchOptions,\n    ...(options.typeFetchOptions ?? {}),\n  };\n\n  const federationFileName = (federationConfig.filename ??\n    'remoteEntry.js') as string;\n  const distPath =\n    get(webpackCompilerOptions, 'devServer.static.directory') ||\n    get(webpackCompilerOptions, 'output.path') ||\n    'dist';\n\n  const typesPath = federationFileName.substring(\n    0,\n    federationFileName.lastIndexOf('/'),\n  );\n\n  const typesIndexJsonFilePath = path.join(\n    typesPath,\n    TYPES_INDEX_JSON_FILE_NAME,\n  );\n\n  const distDir = path.join(distPath, typesPath, typescriptFolderName);\n\n  const tsCompilerOptions: ts.CompilerOptions = {\n    declaration: true,\n    emitDeclarationOnly: true,\n    outDir: path.join(distDir, `/${typescriptCompiledFolderName}/`),\n    noEmit: false,\n  };\n\n  const webpackPublicPath = webpackCompilerOptions.output.publicPath;\n\n  const publicPath =\n    typeof webpackPublicPath === 'string'\n      ? webpackPublicPath === 'auto'\n        ? ''\n        : webpackPublicPath\n      : '';\n\n  const watchOptionsToIgnore = [\n    path.normalize(path.join(context as string, typescriptFolderName)),\n  ];\n\n  const ignoredWatchOptions = Array.isArray(watchOptions.ignored)\n    ? [...watchOptions.ignored, ...watchOptionsToIgnore]\n    : watchOptionsToIgnore;\n\n  return {\n    ...restOptions,\n    typeFetchOptions,\n    distDir,\n    publicPath,\n    tsCompilerOptions,\n    typesIndexJsonFileName: TYPES_INDEX_JSON_FILE_NAME,\n    typesIndexJsonFilePath,\n    typescriptFolderName,\n    webpackCompilerOptions,\n    ignoredWatchOptions,\n  };\n};\n"],"names":["DEFAULT_FETCH_MAX_RETRY_ATTEMPTS","DEFAULT_FETCH_RETRY_DELAY","DEFAULT_FETCH_TIMEOUT","isObjectEmpty","normalizeOptions","validateTypeServeOptions","defaultOptions","compiler","disableDownloadingRemoteTypes","disableTypeCompilation","typescriptFolderName","TYPESCRIPT_FOLDER_NAME","typescriptCompiledFolderName","TYPESCRIPT_COMPILED_FOLDER_NAME","additionalFilesToCompile","typeFetchOptions","downloadRemoteTypesTimeout","maxRetryAttempts","retryDelay","shouldRetryOnTypesNotFound","shouldRetry","options","Error","host","port","Number","isInteger","obj","x","webpackCompilerOptions","context","watchOptions","federationConfig","restOptions","federationFileName","filename","distPath","get","typesPath","substring","lastIndexOf","typesIndexJsonFilePath","path","join","TYPES_INDEX_JSON_FILE_NAME","distDir","tsCompilerOptions","declaration","emitDeclarationOnly","outDir","noEmit","webpackPublicPath","output","publicPath","watchOptionsToIgnore","normalize","ignoredWatchOptions","Array","isArray","ignored","typesIndexJsonFileName"],"mappings":";;;;;;;;;;;IAgBaA,gCAAgC;eAAhCA;;IACAC,yBAAyB;eAAzBA;;IAFAC,qBAAqB;eAArBA;;IAoCAC,aAAa;eAAbA;;IAOAC,gBAAgB;eAAhBA;;IArBAC,wBAAwB;eAAxBA;;;kEAnCG;6DACC;2BAQV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAMH,wBAAwB;AAC9B,MAAMF,mCAAmC;AACzC,MAAMC,4BAA4B;AAEzC,MAAMK,iBAEF;IACFC,UAAU;IACVC,+BAA+B;IAC/BC,wBAAwB;IACxBC,sBAAsBC,iCAAsB;IAC5CC,8BAA8BC,0CAA+B;IAC7DC,0BAA0B,EAAE;IAC5BC,kBAAkB;QAChBC,4BAA4Bd;QAC5Be,kBAAkBjB;QAClBkB,YAAYjB;QACZkB,4BAA4B;QAC5BC,aAAa;IACf;AACF;AAEO,MAAMf,2BAA2B,CAACgB;IACvC,IAAI,CAACA,SAAS;QACZ,MAAM,IAAIC,MAAM;IAClB;IAEA,IAAI,CAACD,QAAQE,IAAI,EAAE;QACjB,MAAM,IAAID,MAAM;IAClB;IAEA,IAAI,CAACD,QAAQG,IAAI,IAAI,CAACC,OAAOC,SAAS,CAACL,QAAQG,IAAI,GAAG;QACpD,MAAM,IAAIF,MAAM;IAClB;AACF;AAEO,MAAMnB,gBAAgB,CAAmBwB;IAC9C,IAAK,MAAMC,KAAKD,IAAK;QACnB,OAAO;IACT;IACA,OAAO;AACT;AAEO,MAAMvB,mBAAmB,CAC9BiB,SACAd;IAEA,MAAMsB,yBAAyBtB,SAASc,OAAO;IAE/C,MAAM,EAAES,OAAO,EAAEC,YAAY,EAAE,GAAGF;IAClC,MAKI,OAAA,aACCvB,gBACAe,UAPC,EACJW,gBAAgB,EAChBtB,oBAAoB,EACpBE,4BAA4B,EAE7B,GAAG,MADCqB,+CACD;QAJFD;QACAtB;QACAE;;QASIS;IAFN,MAAMN,mBAAmB,aACpBT,eAAeS,gBAAgB,EAC9BM,CAAAA,4BAAAA,QAAQN,gBAAgB,YAAxBM,4BAA4B,CAAC;QAGPW;IAA5B,MAAME,qBAAsBF,CAAAA,6BAAAA,iBAAiBG,QAAQ,YAAzBH,6BAC1B;IACF,MAAMI,WACJC,IAAAA,kBAAG,EAACR,wBAAwB,iCAC5BQ,IAAAA,kBAAG,EAACR,wBAAwB,kBAC5B;IAEF,MAAMS,YAAYJ,mBAAmBK,SAAS,CAC5C,GACAL,mBAAmBM,WAAW,CAAC;IAGjC,MAAMC,yBAAyBC,aAAI,CAACC,IAAI,CACtCL,WACAM,qCAA0B;IAG5B,MAAMC,UAAUH,aAAI,CAACC,IAAI,CAACP,UAAUE,WAAW5B;IAE/C,MAAMoC,oBAAwC;QAC5CC,aAAa;QACbC,qBAAqB;QACrBC,QAAQP,aAAI,CAACC,IAAI,CAACE,SAAS,CAAC,CAAC,EAAEjC,6BAA6B,CAAC,CAAC;QAC9DsC,QAAQ;IACV;IAEA,MAAMC,oBAAoBtB,uBAAuBuB,MAAM,CAACC,UAAU;IAElE,MAAMA,aACJ,OAAOF,sBAAsB,WACzBA,sBAAsB,SACpB,KACAA,oBACF;IAEN,MAAMG,uBAAuB;QAC3BZ,aAAI,CAACa,SAAS,CAACb,aAAI,CAACC,IAAI,CAACb,SAAmBpB;KAC7C;IAED,MAAM8C,sBAAsBC,MAAMC,OAAO,CAAC3B,aAAa4B,OAAO,IAC1D;WAAI5B,aAAa4B,OAAO;WAAKL;KAAqB,GAClDA;IAEJ,OAAO,aACFrB;QACHlB;QACA8B;QACAQ;QACAP;QACAc,wBAAwBhB,qCAA0B;QAClDH;QACA/B;QACAmB;QACA2B;;AAEJ"}