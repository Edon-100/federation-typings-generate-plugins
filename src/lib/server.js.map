{"version":3,"sources":["../../../../../packages/typescript/src/lib/server.ts"],"sourcesContent":["import http from 'http';\nimport fs from 'fs';\nimport path from 'path';\nimport { TypeServeOptions } from '../types';\nimport { LoggerInstance } from '../Logger';\n\nexport type TypeServerOptions = {\n  outputPath: string;\n  port: TypeServeOptions['port'];\n  host: TypeServeOptions['host'];\n  logger: LoggerInstance;\n};\n\nconst activeServers: Map<number, http.Server | null> = new Map();\n\nexport const startServer = async ({\n  outputPath,\n  port,\n  host,\n  logger,\n}: TypeServerOptions) => {\n  return new Promise((resolve) => {\n    if (activeServers.get(port!)) {\n      resolve(1);\n      return;\n    }\n\n    const server = http.createServer((req, res) => {\n      const safeSuffix = path\n        .normalize(req.url!)\n        .replace(/^(\\.\\.(\\/|\\\\|$))+/, '');\n\n      const fileName = path.join(outputPath, safeSuffix);\n\n      try {\n        // Ensure the requested file is within the specified directory\n        if (!fileName.startsWith(outputPath)) {\n          res.writeHead(403, { 'Content-Type': 'text/plain' });\n          res.end('Forbidden');\n          return;\n        }\n\n        // Check if the file exists\n        fs.stat(fileName, (err, stat) => {\n          if (err) {\n            logger.log(`Error reading file: ${err}`);\n            res.writeHead(500, { 'Content-Type': 'text/plain' });\n            res.end('Internal Server Error');\n          } else {\n            if (stat.isFile()) {\n              res.writeHead(200, { 'Content-Type': 'text/plain' });\n              fs.createReadStream(fileName).pipe(res);\n            } else {\n              // Handle non-file requests (e.g., directories)\n              res.writeHead(404, { 'Content-Type': 'text/plain' });\n              res.end('Not Found');\n            }\n          }\n        });\n      } catch (err) {\n        logger.log(`Error reading file: ${err}`);\n        res.writeHead(500, { 'Content-Type': 'text/plain' });\n        res.end('Internal Server Error');\n      }\n    });\n\n    server.listen(port, host, () => {\n      logger.log(`Federated Type Server listening on http://${host}:${port}`);\n      resolve(1);\n    });\n\n    activeServers.set(port!, server);\n  });\n};\n\nexport const stopServer = ({\n  port,\n  logger,\n}: {\n  port: number | undefined;\n  logger: LoggerInstance;\n}) => {\n  if (!activeServers.get(port!)) return;\n\n  logger.log('Stopping Federated Type Server');\n\n  const server = activeServers.get(port!);\n  if (server) {\n    server.close();\n  }\n};\n"],"names":["startServer","stopServer","activeServers","Map","outputPath","port","host","logger","Promise","resolve","get","server","http","createServer","req","res","safeSuffix","path","normalize","url","replace","fileName","join","startsWith","writeHead","end","fs","stat","err","log","isFile","createReadStream","pipe","listen","set","close"],"mappings":";;;;;;;;;;;IAeaA,WAAW;eAAXA;;IA4DAC,UAAU;eAAVA;;;6DA3EI;2DACF;6DACE;;;;;;AAWjB,MAAMC,gBAAiD,IAAIC;AAEpD,MAAMH,cAAc,OAAO,EAChCI,UAAU,EACVC,IAAI,EACJC,IAAI,EACJC,MAAM,EACY;IAClB,OAAO,IAAIC,QAAQ,CAACC;QAClB,IAAIP,cAAcQ,GAAG,CAACL,OAAQ;YAC5BI,QAAQ;YACR;QACF;QAEA,MAAME,SAASC,aAAI,CAACC,YAAY,CAAC,CAACC,KAAKC;YACrC,MAAMC,aAAaC,aAAI,CACpBC,SAAS,CAACJ,IAAIK,GAAG,EACjBC,OAAO,CAAC,qBAAqB;YAEhC,MAAMC,WAAWJ,aAAI,CAACK,IAAI,CAAClB,YAAYY;YAEvC,IAAI;gBACF,8DAA8D;gBAC9D,IAAI,CAACK,SAASE,UAAU,CAACnB,aAAa;oBACpCW,IAAIS,SAAS,CAAC,KAAK;wBAAE,gBAAgB;oBAAa;oBAClDT,IAAIU,GAAG,CAAC;oBACR;gBACF;gBAEA,2BAA2B;gBAC3BC,WAAE,CAACC,IAAI,CAACN,UAAU,CAACO,KAAKD;oBACtB,IAAIC,KAAK;wBACPrB,OAAOsB,GAAG,CAAC,CAAC,oBAAoB,EAAED,IAAI,CAAC;wBACvCb,IAAIS,SAAS,CAAC,KAAK;4BAAE,gBAAgB;wBAAa;wBAClDT,IAAIU,GAAG,CAAC;oBACV,OAAO;wBACL,IAAIE,KAAKG,MAAM,IAAI;4BACjBf,IAAIS,SAAS,CAAC,KAAK;gCAAE,gBAAgB;4BAAa;4BAClDE,WAAE,CAACK,gBAAgB,CAACV,UAAUW,IAAI,CAACjB;wBACrC,OAAO;4BACL,+CAA+C;4BAC/CA,IAAIS,SAAS,CAAC,KAAK;gCAAE,gBAAgB;4BAAa;4BAClDT,IAAIU,GAAG,CAAC;wBACV;oBACF;gBACF;YACF,EAAE,OAAOG,KAAK;gBACZrB,OAAOsB,GAAG,CAAC,CAAC,oBAAoB,EAAED,IAAI,CAAC;gBACvCb,IAAIS,SAAS,CAAC,KAAK;oBAAE,gBAAgB;gBAAa;gBAClDT,IAAIU,GAAG,CAAC;YACV;QACF;QAEAd,OAAOsB,MAAM,CAAC5B,MAAMC,MAAM;YACxBC,OAAOsB,GAAG,CAAC,CAAC,0CAA0C,EAAEvB,KAAK,CAAC,EAAED,KAAK,CAAC;YACtEI,QAAQ;QACV;QAEAP,cAAcgC,GAAG,CAAC7B,MAAOM;IAC3B;AACF;AAEO,MAAMV,aAAa,CAAC,EACzBI,IAAI,EACJE,MAAM,EAIP;IACC,IAAI,CAACL,cAAcQ,GAAG,CAACL,OAAQ;IAE/BE,OAAOsB,GAAG,CAAC;IAEX,MAAMlB,SAAST,cAAcQ,GAAG,CAACL;IACjC,IAAIM,QAAQ;QACVA,OAAOwB,KAAK;IACd;AACF"}